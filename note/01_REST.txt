01_REST.txt

# REST

	- URI만으로 어떤 자원인지 식별하고 요청 메서드로 해당 자원에 대한 어떤 요청인지를 구분하여 데이터만 응답하는 방식
	- 응답으로 HTML 코드가 아닌 데이터만을 응답하기 때문에 웹 브라우저가 아닌 다른 어플리케이션에서도 웹 서버에서 제공하는 데이터를 활용할 수 있다.

# URI만으로 자원을 구분하는 방법

	- POST 방식으로 요청하면 해당 자원을 추가하라는 의미로 받아들인다.
	  e.g) POST:/employee (새 자원을 추가한다)
	- GET 방식으로 요청하면 해당 자원을 조회하겠다는 의미로 받아들인다.
	  e.g) GET:/employee/130 (130번 사원을 조회하고 싶다)
	- PUT 방식으로 요청하면 해당 자원을 수정하겠다는 의미로 받아들인다.
	  e.g) UPDATE:/employee/145 (145번 사원을 수정하고 싶다)
	- DELETE 방식으로 요청하면 해당 자원을 삭제하겠다는 의미로 받아들인다.
	  e.g) DELETE:/employee/150 (150번 사원을 삭제하고 싶다)
	- PATCH 방식으로 요청하면 해당 자원의 일부분만을 수정하겠다는 의미로 받아들인다.
	  e.g) PATCH:/employee/145 (145번 사원의 일부분만 수정하고 싶다)
	  
# Spring에서 REST를 구현하기 위해 필요한 기능들

	- @RestController : 해당 클래스가 일반 컨트롤러가 아닌 REST 방식을 다루는 컨트롤러임을 표시
	- @ResponseBody : 일반 컨트롤러 내부의 해당 메서드가 뷰 페이지(.html 코드) 대신에 데이터를 응답한다는 것을 표시
	- @RequestBody : 요청에 파싱이 필요한 데이터(JSON 또는 XML 형식의 문자열)가 실려있다는 것을 표시
	- @PathVariable : 요청 URI의 일부분을 변수로 활용할 수 있다.
	
#RestController

	- 일반 컨트롤러와 다르게 컨트롤러 내부 메서드의 리턴 타입이 클라이언트에게 응답하는 데이터의 타입을 의미한다.
	- 응답하는 데이터 타입을 자바빈 객체 타입으로 지정하면 jackson-databind에 의해 JSON 또는 XML 형식 문자열로 변환되어 응답한다.
	  (XML 형식을 사용하기 위해서는 별도의 라이브러리가 추가로 필요하다)
	  
		<dependency>
		    <groupId>com.fasterxml.jackson.dataformat</groupId>
		    <artifactId>jackson-dataformat-xml</artifactId>
		    <version>2.17.2</version>
		</dependency>
		
	- jackson-datebind는 객체가 여러 개인 경우 List 형식으로 응답하면 알아서 잘 변환해준다.
	
# @RestController 내부에서 ResponseEntity 타입 응답하기

	- ResponseEntity 객체는 내가 원하는 응답을 직접 생성할 때 사용한다.
	- 응답코드(status), 컨텐츠 타입(content-type), 응답 내용(body) 등을 모두 직접 설정하여 응답할 수 있다. 